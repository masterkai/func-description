"use strict";var _createClass=function(){function n(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(t,e,i){return e&&n(t.prototype,e),i&&n(t,i),t}}();function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var Carousel=function(){function u(t,e,i,n,s,h,r){var a=this,c=7<arguments.length&&void 0!==arguments[7]?arguments[7]:2e3;_classCallCheck(this,u),this.carousel=t,this.imgContainer=e,this.leftBtn=i,this.rightBtn=n,this.images=s,this.thumbs=h,this.timeout=c,this.sliderSize=this.carousel.clientWidth,this.index=0,this.resizeTimer=null,this.circles=r,this.interval=setInterval(function(){a.run()},this.timeout),this.resetSize(),this.windowResize(),this.controller(),this.thumb(),this.initialActiveCircle()}return _createClass(u,[{key:"currentIndex",value:function(){return this.index}},{key:"thumb",value:function(){var i=this,n=this;this.thumbs.forEach(function(t,e){t.addEventListener("click",function(){n.index=e,i.changeImage(),i.resetInterval()})})}},{key:"controller",value:function(){var t=this,e=this;this.rightBtn.addEventListener("click",function(){e.index++,t.changeImage(),t.resetInterval(),t.addActiveCircle(t.index)}),this.leftBtn.addEventListener("click",function(){e.index--,t.changeImage(),t.resetInterval(),t.addActiveCircle(t.index)})}},{key:"initialActiveCircle",value:function(){this.circles&&this.circles[0].classList.add("active")}},{key:"addActiveCircle",value:function(t){this.circles.forEach(function(t){return t.classList.remove("active")}),this.circles[t].classList.add("active")}},{key:"windowResize",value:function(){var e=this;window.addEventListener("resize",function(t){e.resizeTimer&&clearTimeout(e.resizeTimer),e.resizeTimer=setTimeout(function(){e.resetSize()},500)})}},{key:"resetSize",value:function(){var e=this;this.index=0,this.changeImage(),this.sliderSize=this.carousel.clientWidth,window.innerWidth<=500?this.images.forEach(function(t){return t.style.width="100%"}):this.images.forEach(function(t){return t.style.width=""+e.carousel.clientWidth})}},{key:"run",value:function(){this.index++,this.changeImage(),this.addActiveCircle(this.index)}},{key:"resetInterval",value:function(){var t=this;clearInterval(this.interval),this.interval=setInterval(function(){return t.run()},this.timeout)}},{key:"changeImage",value:function(){this.index>this.images.length-1?this.index=0:this.index<0&&(this.index=this.images.length-1),this.imgContainer.style.transform="translateX("+-this.index*this.sliderSize+"px)"}}]),u}(),Thumbs=function(){function h(t,e,i,n,s){_classCallCheck(this,h),this.carousel=t,this.thumbsContainer=e,this.prevBtn=i,this.nextBtn=n,this.thumbs=s,this.thumbSize=void 0,this.thumbIndex=0,this.resizeTimer=null,this.resetSize(),this.windowResize(),this.controller()}return _createClass(h,[{key:"resetSize",value:function(){var e=this;this.thumbs.forEach(function(t){return t.style.width=e.carousel.clientWidth/5-16+"px"}),this.thumbIndex=0,this.thumbSize=carousel.clientWidth,this.changeThumb()}},{key:"changeThumb",value:function(){this.thumbs.length<=5?this.thumbIndex=0:this.thumbIndex>this.thumbs.length/(this.thumbs.length/2)-1?this.thumbIndex=0:this.thumbIndex<0&&(this.thumbIndex=this.thumbs.length/(this.thumbs.length/2)-1),this.thumbsContainer.style.transform="translateX("+-this.thumbIndex*this.thumbSize+"px)"}},{key:"controller",value:function(){var t=this;this.nextBtn.addEventListener("click",function(){t.thumbIndex++,t.changeThumb()}),this.prevBtn.addEventListener("click",function(){t.thumbIndex--,t.changeThumb()})}},{key:"windowResize",value:function(){var e=this;window.addEventListener("resize",function(t){e.resizeTimer&&clearTimeout(e.resizeTimer),e.resizeTimer=setTimeout(function(){e.resetSize()},500)})}}]),h}(),Circle=function t(){_classCallCheck(this,t)};
"use strict";var _createClass=function(){function n(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,a){return t&&n(e.prototype,t),a&&n(e,a),e}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var YouTubeModal=function(){function n(e,t,a){_classCallCheck(this,n),this.videoId=e,this.playerId=t,this.playBtn=document.getElementById(a)?document.getElementById(a):null,this.player=void 0,this.onPlayerReady=this.onPlayerReady.bind(this),this.mountYouTubeApi(),this.controller()}return _createClass(n,[{key:"mountYouTubeApi",value:function(){var e=document.createElement("script");e.src="https://www.youtube.com/iframe_api";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}},{key:"createModalBody",value:function(){return'\n        <div class="Empy-modal-header Empy-modal-header--noContentOnlyCloseBtn"><button class="btn btn-empy-link closeBtn"></button></div>\n        <div class="Empy-modal-body">\n            <div id="'+this.playerId+'"></div>            \n        </div>'}},{key:"controller",value:function(){var e=this,t=document.createElement("div");t.className="Empy-mask";var a=document.createElement("div");a.className="Empy-modal",t.appendChild(a),this.playBtn&&this.playBtn.addEventListener("click",function(){a.textContent="",a.className="Empy-modal Empy-modal--youtube",a.insertAdjacentHTML("afterbegin",e.createModalBody()),document.body.insertAdjacentElement("afterbegin",t),document.querySelector(".closeBtn").addEventListener("click",function(){t.classList.remove("show"),e.pauseVideo()}),t.classList.add("show"),e.onYouTubeIframeAPIReady()})}},{key:"onYouTubeIframeAPIReady",value:function(){this.player=new YT.Player(this.playerId,{height:"315",width:"560",videoId:this.videoId,playerVars:{rel:0,showinfo:0,ecver:2},events:{onStateChange:this.onPlayerStateChange,onReady:this.onPlayerReady}})}},{key:"onPlayerReady",value:function(){console.log("video player is ready"),this.activateVideo()}},{key:"onPlayerStateChange",value:function(e){e.data==YT.PlayerState.PLAYING?console.log("player is playing"):console.log("player is not playing")}},{key:"stopVideo",value:function(){this.player.stopVideo()}},{key:"activateVideo",value:function(){this.player.playVideo()}},{key:"pauseVideo",value:function(){console.log("pause the video player and close the video modal."),this.player.pauseVideo()}}]),n}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
